#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 7.1 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 55 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 15 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1           0 9731 0 28 3 23 #"#lang typed/racket/base"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";;; typechecker.rkt"
0 0 24 29 1 #"\n"
0 0 17 3 3 #";;;"
0 0 24 29 1 #"\n"
0 0 17 3 70
(
 #";;; This file implements type checking of expressions and definition"
 #"s."
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"basics.rkt\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"normalize.rkt\""
0 0 24 3 1 #" "
0 0 19 3 11 #"\"alpha.rkt\""
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 12 #"racket/match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"for-syntax"
0 0 24 3 1 #" "
0 0 14 3 11 #"racket/base"
0 0 24 3 1 #" "
0 0 14 3 12 #"syntax/parse"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 7 #"provide"
0 0 24 3 2 #" ("
0 0 14 3 15 #"all-defined-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 13 #"require/typed"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"inference.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 5 #"solve"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #" ("
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 9 #"solve-arg"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #" ("
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #") "
0 0 21 3 2 #"#f"
0 0 24 3 4 #"))])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 13 #"require/typed"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"locations.rkt\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 18 #"location-for-info?"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 16 #"location->srcloc"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 6 #"Srcloc"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ["
0 0 14 3 12 #"not-for-info"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 11 #"Precise-Loc"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #" ("
0 0 14 3 11 #"Parameterof"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 10 #"definition"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"has-type"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"TODO"
0 0 24 3 1 #" "
0 0 14 3 16 #"Serializable-Ctx"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 4 #"Void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 13 #"pie-info-hook"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 14 #"make-parameter"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 3 #") ("
0 0 14 3 4 #"void"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 13 #"send-pie-info"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 10 #"definition"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"has-type"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"TODO"
0 0 24 3 1 #" "
0 0 14 3 16 #"Serializable-Ctx"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                     "
0 0 14 3 4 #"Void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"send-pie-info"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"when"
0 0 24 3 2 #" ("
0 0 14 3 18 #"location-for-info?"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 4 #"what"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 11 #"define-type"
0 0 24 3 1 #" "
0 0 14 3 8 #"Renaming"
0 0 24 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 24 3 2 #" ("
0 0 14 3 4 #"Pair"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 6 #"rename"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 8 #"Renaming"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rename"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assv"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"y"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 15 #"extend-renaming"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 8 #"Renaming"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 1 #" "
0 0 14 3 8 #"Renaming"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 2 #") "
0 0 14 3 1 #"r"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 8 #"Renaming"
0 0 24 3 1 #" "
0 0 14 3 3 #"Src"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-type"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-type"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-stx"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"U"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 3 #"Nat"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"Nat"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"B-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"B"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"B-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"C*"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"t-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"C*"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"t-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 6 #"A-outv"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"B-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 6 #"A-outv"
0 0 24 3 3 #") ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"B"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"B-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #") ("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"A1"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"z"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 6 #"A-outv"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"B-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 6 #"A-outv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 5 #"list*"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"A1"
0 0 24 3 2 #") "
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"B-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 21 #";;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 32 #";; Confirming that \316\240i is a type"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"\316\240i"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 6 #"A-outv"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"B-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 6 #"A-outv"
0 0 24 3 3 #") ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #") "
0 0 14 3 1 #"B"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"\316\240i"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"B-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 4 #"Atom"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"Atom"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"Pair"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"D"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"D-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"D"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"D-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 1 #"D"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 6 #"A-outv"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"D-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 6 #"A-outv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"D"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"D-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #") ("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"A1"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"D"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"z"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 6 #"A-outv"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"D-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 14 3 6 #"A-outv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 5 #"list*"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"A1"
0 0 24 3 2 #") "
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"D"
0 0 24 3 5 #")))])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"D-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 7 #"Trivial"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"Trivial"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"E-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"E-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 6 #"Absurd"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"Absurd"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"to"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 2 #"Av"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"from-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"to-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"from-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"to-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"Vec"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"len"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"E-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"len-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"Vec"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"E-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"len-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 6 #"Either"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"R"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"L-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"R-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 6 #"Either"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"L-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"R-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 5 #"other"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #" ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 2 #") "
0 0 14 3 5 #"other"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 5 #"t-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 5 #"t-out"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 3 #"why"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"            [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 3 #") ("
0 0 14 3 9 #"var-name?"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 8 #"other-tv"
0 0 24 3 2 #" ("
0 0 14 3 8 #"var-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 2 #") "
0 0 14 3 5 #"other"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                          "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 10 #"\"Expected\""
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 19 3 11 #"\"but given\""
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"other-tv"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ["
0 0 14 3 4 #"else"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 12 #"\"Not a type\""
0 0 24 3 9 #"))])])]))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-type"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 13 #"send-pie-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"in"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"synth"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 8 #"Renaming"
0 0 24 3 1 #" "
0 0 14 3 3 #"Src"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 2 #" ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-expr"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 2 #" ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"the-expr"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-stx"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 3 #"Nat"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 14 3 3 #"Nat"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 17 3 2 #"#;"
0 0 24 3 1 #"("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"U"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 41 #"\"is a type, but it does not have a type.\""
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"z"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"B-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 1 #"B"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"B-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"C*"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"z"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"t-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"z"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 12 #"not-for-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"C"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"C*"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"z"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"t-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"B-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 1 #"B"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 2 #"x^"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"B-out"
0 0 24 3 7 #"))))))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 27 #";;;;;;;;;;;;;;;;;;;;;;;;;;;"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 31 #";; Synthesizing that \316\240i is a U"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"\316\240i"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"B-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 1 #"B"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 3 #"\316\240i"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 2 #"x^"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"B-out"
0 0 24 3 7 #"))))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #") ("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"A1"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"B-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 12 #"not-for-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 5 #"list*"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"A1"
0 0 24 3 2 #") "
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"B"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 2 #"x^"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"B-out"
0 0 24 3 7 #"))))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 4 #"zero"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"Nat"
0 0 24 3 1 #" "
0 0 14 3 4 #"zero"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"n"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"n-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"Nat"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"n-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 9 #"which-Nat"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"tgt-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"s-out"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"n-1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"n-1"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 2 #"PI"
0 0 24 3 1 #" "
0 0 14 3 3 #"n-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 2 #" ("
0 0 14 3 7 #"FO-CLOS"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ctx->env"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #") "
0 0 14 3 3 #"n-1"
0 0 24 3 1 #" "
0 0 14 3 7 #"b-t-out"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"which-Nat"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 2 #" ("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 5 #"s-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"iter-Nat"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"tgt-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"s-out"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"old"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 3 #"old"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 8 #"iter-Nat"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 2 #" ("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 5 #"s-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"rec-Nat"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"tgt-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"s-out"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 3 #"n-1"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"n-1"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                             ["
0 0 14 3 3 #"old"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"old"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 3 #"n-1"
0 0 24 3 1 #" "
0 0 14 3 3 #"Nat"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 2 #"\316\240"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 3 #"old"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                              "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 7 #")))))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"rec-Nat"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 2 #" ("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 5 #"s-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"ind-Nat"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"mot"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"tgt-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"mot-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"mot"
0 0 24 3 2 #" ("
0 0 14 3 2 #"PI"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"n"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 2 #" ("
0 0 14 3 7 #"HO-CLOS"
0 0 24 3 2 #" ("
0 0 15 3 6 #"lambda"
0 0 24 3 2 #" ("
0 0 14 3 1 #"n"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"mot-val"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"b-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"ZERO"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"s-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 3 #"n-1"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 2 #"ih"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 1 #" "
0 0 14 3 3 #"n-1"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 2 #" ("
0 0 14 3 4 #"ADD1"
0 0 24 3 1 #" "
0 0 14 3 3 #"n-1"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 7 #"ind-Nat"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"s-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 4 #"Atom"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 14 3 4 #"Atom"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"Pair"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"D"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"a"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"D-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 1 #"D"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"D-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 1 #"D"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"D-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 14 3 2 #"x^"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 14 3 1 #"D"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 2 #"x^"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"D-out"
0 0 24 3 7 #"))))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 3 #") ("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"A1"
0 0 24 3 2 #") "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"D"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ["
0 0 14 3 5 #"D-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                               ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 12 #"not-for-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"\316\243"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 5 #"list*"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"A1"
0 0 24 3 2 #") "
0 0 14 3 4 #"more"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"D"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 2 #"\316\243"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 2 #"x^"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 5 #"D-out"
0 0 24 3 7 #"))))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"p-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 3 #"p-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 5 #"SIGMA"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 4 #"clos"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 3 #") ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 9 #"non-Sigma"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"Not a \316\243:\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 9 #"non-Sigma"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"p-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 3 #"p-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 5 #"SIGMA"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 14 #"val-of-closure"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 6 #"do-car"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"p-out"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 9 #"non-Sigma"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"Not a \316\243:\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 9 #"non-Sigma"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 5 #"quote"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"Atom"
0 0 24 3 2 #" ("
0 0 14 3 5 #"quote"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 12 #"           ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 39 #"\"Atoms consist of letters and hyphens.\""
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 7 #"Trivial"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 14 3 7 #"Trivial"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 4 #"sole"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 7 #"Trivial"
0 0 24 3 1 #" "
0 0 14 3 4 #"sole"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"ind-List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"mot"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"tgt-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"tgt-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 4 #"LIST"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"mot-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 3 #"mot"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 2 #"PI"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"xs"
0 0 24 3 2 #" ("
0 0 14 3 4 #"LIST"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 14 3 7 #"FO-CLOS"
0 0 24 3 2 #" ("
0 0 14 3 8 #"ctx->env"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 2 #"xs"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"U"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 7 #"mot-val"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"b-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NIL"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"s-out"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 2 #"es"
0 0 24 3 2 #" ("
0 0 14 3 4 #"LIST"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                          ("
0 0 14 3 2 #"ih"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 1 #" "
0 0 14 3 2 #"es"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                         ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 2 #" ("
0 0 14 3 6 #"LIST::"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"es"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 8 #"ind-List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 28 3 1 #","
0 0 14 3 5 #"s-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 5 #"other"
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 12 #"\"Not List: \""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"rec-List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"tgt-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"tgt-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 4 #"LIST"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 7 #"b-t-val"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"b-t-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"s-out"
0 0 24 3 2 #" ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ["
0 0 14 3 2 #"xs"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"xs"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                      ["
0 0 14 3 2 #"ih"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"ih"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 5 #"check"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 2 #"es"
0 0 24 3 2 #" ("
0 0 14 3 4 #"LIST"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 2 #"ih"
0 0 24 3 1 #" "
0 0 14 3 7 #"b-t-val"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 7 #"b-t-val"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 8 #"rec-List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"b-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                            "
0 0 28 3 1 #","
0 0 14 3 5 #"s-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 5 #"other"
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 12 #"\"Not List: \""
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                               "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"other"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"E-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"E-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 2 #"::"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"es"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"e-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"es-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"es"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"E"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 2 #" ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"E"
0 0 24 3 3 #") ("
0 0 14 3 2 #"::"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"e-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"es-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 6 #"Absurd"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 14 3 6 #"Absurd"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 10 #"ind-Absurd"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"mot"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"tgt-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"ABSURD"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"mot-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"mot"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 2 #" ("
0 0 14 3 10 #"ind-Absurd"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"to"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"A-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 3 #"A-v"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"A-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 8 #"from-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"from"
0 0 24 3 1 #" "
0 0 14 3 3 #"A-v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 6 #"to-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 3 #"A-v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"A-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"from-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"to-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"replace"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"mot"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"tgt-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 9 #"tgt-t-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 5 #"fromv"
0 0 24 3 1 #" "
0 0 14 3 3 #"tov"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"mot-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 14 3 3 #"mot"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 3 #")) "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 5 #"b-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 54 #"                                                      "
0 0 14 3 5 #"fromv"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 62
#"                                                              "
0 0 14 3 3 #"tov"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 7 #"replace"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 9 #"non-equal"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 54 #"\"Expected an expression with = type, but the type was\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 28 3 1 #","
0 0 14 3 9 #"tgt-t-out"
0 0 24 3 6 #"))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 5 #"trans"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"p1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"p2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"p1-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"p1-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"p1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"p2-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"p2-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"p2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 6 #"match*"
0 0 24 3 3 #" (("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"p1-t-out"
0 0 24 3 3 #") ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"p2-t-out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                [(("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 1 #" "
0 0 14 3 5 #"mid-v"
0 0 24 3 3 #") ("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Bv"
0 0 24 3 1 #" "
0 0 14 3 6 #"mid-v2"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 9 #"same-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 2 #"Bv"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 5 #"mid-v"
0 0 24 3 1 #" "
0 0 14 3 6 #"mid-v2"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 5 #"trans"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"p1-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"p2-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 5 #"non=1"
0 0 24 3 1 #" "
0 0 14 3 5 #"non=2"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 17 #"\"Expected =, got\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"non=1"
0 0 24 3 2 #") "
0 0 19 3 5 #"\"and\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"non=2"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cong"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"p"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"f"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"p-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"f-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"f-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"p-t-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"f-t-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                   [("
0 0 14 3 2 #"PI"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"Bv"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 9 #"same-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 2 #"Bv"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"Cv"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 14 #"val-of-closure"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 3 #"f-v"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"f-out"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 3 #"f-v"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 3 #"f-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"cong"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 5 #"f-out"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 17 3 2 #"#;"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 9 #"same-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 2 #"Bv"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"Cv"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 14 #"val-of-closure"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 3 #"f-v"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"f-out"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 3 #"f-v"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                        "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 3 #"f-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 38 #"                                     ("
0 0 14 3 4 #"cong"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Cv"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 5 #"f-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ["
0 0 14 3 6 #"non-Pi"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 26 #"\"Expected a function, got\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 6 #"non-Pi"
0 0 24 3 6 #")))])]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 4 #"non="
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 17 #"\"Expected =, got\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 4 #"non="
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"symm"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"p"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"p-t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"p"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"p-t-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"symm"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"p-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 4 #"non="
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 17 #"\"Expected =, got\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 4 #"non="
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 5 #"ind-="
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"mot"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"base"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"tgt-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"tgt-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"mot-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"mot"
0 0 24 3 2 #" ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 2 #"to"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 1 #"p"
0 0 24 3 2 #" ("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 1 #" "
0 0 14 3 2 #"to"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 57 #"                                                         "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"mot-v"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 8 #"base-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"base"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 5 #"mot-v"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 4 #"SAME"
0 0 24 3 1 #" "
0 0 14 3 6 #"from-v"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 5 #"mot-v"
0 0 24 3 1 #" "
0 0 14 3 4 #"to-v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 61
#"                                                            ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"tgt-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 5 #"ind-="
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 29 1 #"\n"
0 0 24 3 41 #"                                         "
0 0 28 3 1 #","
0 0 14 3 8 #"base-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 4 #"non="
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 37 #"\"Expected evidence of equality, got \""
0 0 24 29 1 #"\n"
0 0 24 3 42 #"                                          "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 4 #"non="
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"Vec"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"len"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"E-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 7 #"len-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Vec"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"E-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"len-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"es"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 11 #"es-type-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"es-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"es"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 11 #"es-type-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 2 #" ("
0 0 14 3 4 #"ADD1"
0 0 24 3 1 #" "
0 0 14 3 5 #"len-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"head"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"es-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-add1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 56
#"\"Expected a Vec with add1 at the top of the length, got\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-add1"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 7 #"non-Vec"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 21 #"\"Expected a Vec, got\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"non-Vec"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"es"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 11 #"es-type-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"es-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 2 #"es"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 11 #"es-type-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 2 #" ("
0 0 14 3 4 #"ADD1"
0 0 24 3 1 #" "
0 0 14 3 5 #"len-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 2 #" ("
0 0 14 3 3 #"Vec"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 1 #" "
0 0 14 3 5 #"len-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 4 #"tail"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"es-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-add1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 56
#"\"Expected a Vec with add1 at the top of the length, got\""
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-add1"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 7 #"non-Vec"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 21 #"\"Expected a Vec, got\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"non-Vec"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 7 #"ind-Vec"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"vec"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"mot"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"s"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"len-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"len"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"len-v"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"len-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"vec-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"vec-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"vec-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 14 3 6 #"len2-v"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 3 #"vec"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 1 #" "
0 0 14 3 5 #"len-v"
0 0 24 3 1 #" "
0 0 14 3 6 #"len2-v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 7 #"mot-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                   "
0 0 14 3 3 #"mot"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                   ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 1 #"k"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                            ("
0 0 14 3 2 #"es"
0 0 24 3 2 #" ("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 14 3 1 #"k"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 7 #"mot-val"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"b-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 39 #"                                       "
0 0 14 3 1 #"b"
0 0 24 29 1 #"\n"
0 0 24 3 40 #"                                       ("
0 0 14 3 5 #"do-ap"
0 0 24 3 2 #" ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"ZERO"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 14 3 6 #"VECNIL"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ("
0 0 14 3 5 #"s-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                 "
0 0 14 3 1 #"s"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 17 #"ind-Vec-step-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 3 #" (("
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"len-out"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 7 #"vec-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 7 #"ind-Vec"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"len-out"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 28 3 1 #","
0 0 14 3 7 #"vec-out"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 29 1 #"\n"
0 0 24 3 43 #"                                           "
0 0 28 3 1 #","
0 0 14 3 5 #"s-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 7 #"non-Vec"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 21 #"\"Expected a Vec, got\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"non-Vec"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 6 #"Either"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"R"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"L-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"L"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"R-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"R"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 1 #"U"
0 0 24 3 2 #" ("
0 0 14 3 6 #"Either"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"L-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"R-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 10 #"ind-Either"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"tgt"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"mot"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"on-left"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"on-right"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"tgt-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"tgt"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"tgt-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 6 #"EITHER"
0 0 24 3 1 #" "
0 0 14 3 2 #"Lv"
0 0 24 3 1 #" "
0 0 14 3 2 #"Rv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 1 #"x"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"mot-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 3 #"mot"
0 0 24 3 2 #" ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 1 #"x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"EITHER"
0 0 24 3 1 #" "
0 0 14 3 2 #"Lv"
0 0 24 3 1 #" "
0 0 14 3 2 #"Rv"
0 0 24 3 4 #"))) "
0 0 21 3 1 #"'"
0 0 14 3 8 #"UNIVERSE"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 7 #"mot-val"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 5 #"l-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 7 #"on-left"
0 0 24 3 2 #" ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"Lv"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 2 #" ("
0 0 14 3 4 #"LEFT"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 28 #"                           ("
0 0 14 3 5 #"r-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 8 #"on-right"
0 0 24 3 2 #" ("
0 0 14 3 7 #"\316\240-type"
0 0 24 3 3 #" (("
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"Rv"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"do-ap"
0 0 24 3 1 #" "
0 0 14 3 7 #"mot-val"
0 0 24 3 2 #" ("
0 0 14 3 5 #"RIGHT"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 10 #"ind-Either"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"tgt-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"mot-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"l-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"r-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 10 #"non-Either"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                       "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 31 #"\"Expected an Either, but got a\""
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                         "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 10 #"non-Either"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"t-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 5 #"e-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"t-out"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"e-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 45
#";;; \316\223 \342\212\242 f synth ~> (the (Pi ((x A)) B) f')"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 24 #";;; \316\223 \342\212\242 a \342\210\210 A ~> a'"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 44 #";;; ----------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 47
#";;; \316\223 \342\212\242 (f a) synth ~> (the B[a'/x] (f' a'))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"rand"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 23 3 6 #"#:when"
0 0 24 3 2 #" ("
0 0 14 3 4 #"src?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"rator-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 9 #"rator-out"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"rator-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 2 #"PI"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 8 #"rand-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 14 #"val-of-closure"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"rand-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 28 3 1 #","
0 0 14 3 9 #"rator-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"rand-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"PIi"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"t-rand"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"rand-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"solve-app"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 2 #") "
0 0 14 3 7 #"rator-t"
0 0 24 3 1 #" "
0 0 14 3 6 #"t-rand"
0 0 24 3 1 #" "
0 0 14 3 9 #"rator-out"
0 0 24 3 1 #" "
0 0 14 3 8 #"rand-out"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 6 #"non-PI"
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"Not a \316\240:\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 6 #"non-PI"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 57
(
 #";;; \316\223 \342\212\242 (f x y ...) synth ~> (the (Pi ((x A)) B) a"
 #"pp')"
) 0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 24 #";;; \316\223 \342\212\242 z \342\210\210 A ~> z'"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 54 #";;;---------------------------------------------------"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 57
(
 #";;; \316\223 \342\212\242 (f x y ... z) synth ~> (the B[z'/x] (app' "
 #"z'))"
) 0 0 24 29 1 #"\n"
0 0 24 3 8 #"      [("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 5 #"rand0"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #" "
0 0 14 3 3 #"..."
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"       "
0 0 23 3 6 #"#:when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 4 #"src?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 6 #"andmap"
0 0 24 3 1 #" "
0 0 14 3 4 #"src?"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"app0-t"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"app0"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 2 #" ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 12 #"not-for-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 4 #")) ("
0 0 14 3 5 #"list*"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 5 #"rand0"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 6 #"app0-t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 2 #"PI"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 8 #"rand-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 29 1 #"\n"
0 0 24 3 36 #"                                    "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 37 #"                                    ("
0 0 14 3 14 #"val-of-closure"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"rand-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 28 3 1 #","
0 0 14 3 4 #"app0"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"rand-out"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                [("
0 0 14 3 3 #"PIi"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 6 #"t-rand"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"rand-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 9 #"solve-app"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 2 #") "
0 0 14 3 6 #"app0-t"
0 0 24 3 1 #" "
0 0 14 3 6 #"t-rand"
0 0 24 3 1 #" "
0 0 14 3 4 #"app0"
0 0 24 3 1 #" "
0 0 14 3 8 #"rand-out"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ["
0 0 14 3 6 #"non-PI"
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"Not a \316\240:\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 6 #"non-PI"
0 0 24 3 7 #")))]))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 1 #"x"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 3 #"and"
0 0 24 3 2 #" ("
0 0 14 3 7 #"symbol?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #") ("
0 0 14 3 9 #"var-name?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 6 #"real-x"
0 0 24 3 2 #" ("
0 0 14 3 6 #"rename"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 4 #"x-tv"
0 0 24 3 2 #" ("
0 0 14 3 8 #"var-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 14 3 6 #"real-x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                       ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assv"
0 0 24 3 1 #" "
0 0 14 3 6 #"real-x"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                [("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 15 3 3 #"def"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 1 #" "
0 0 14 3 1 #"_"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                 ("
0 0 14 3 13 #"send-pie-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"'"
0 0 15 3 10 #"definition"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ["
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 4 #"void"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 4 #"x-tv"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 6 #"real-x"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"             [("
0 0 14 3 7 #"number?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 5 #"zero?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"Nat"
0 0 24 3 1 #" "
0 0 14 3 4 #"zero"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                    [("
0 0 14 3 9 #"positive?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                     ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 7 #"n-1-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 46 #"                                             ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 4 #"sub1"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 45 #"                                             "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 3 #"Nat"
0 0 24 3 2 #" ("
0 0 14 3 4 #"add1"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"n-1-out"
0 0 24 3 7 #"))))])]"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"             ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 24 #"\"Can't determine a type\""
0 0 24 3 7 #"))])]))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"ty"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"out"
0 0 24 3 2 #") "
0 0 14 3 8 #"the-expr"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 13 #"send-pie-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"has-type"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"ty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 8 #"the-expr"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 14 #";; new version"
0 0 24 29 1 #"\n"
0 0 17 3 76
(
 #"; -- handles new version of solve-arg, and makes a new application s"
 #"tatement"
) 0 0 24 29 1 #"\n"
0 0 17 3 92
(
 #"; does the 'go' on its own (so there's a new way to call it, and han"
 #"ding etc. above in synth"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 9 #"solve-app"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 2 #" ("
0 0 14 3 4 #"List"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"solve-app"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #" "
0 0 14 3 8 #"\317\204-rator"
0 0 24 3 1 #" "
0 0 14 3 7 #"\317\204-rand"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"succeed?"
0 0 24 3 2 #" ("
0 0 14 3 9 #"solve-arg"
0 0 24 3 1 #" "
0 0 14 3 8 #"\317\204-rator"
0 0 24 3 1 #" "
0 0 14 3 7 #"\317\204-rand"
0 0 24 3 1 #" "
0 0 14 3 4 #"rand"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 8 #"succeed?"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 2 #"#f"
0 0 24 3 2 #" ("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 26 #"\"Could not resolve type: \""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 8 #"\317\204-rator"
0 0 24 29 1 #"\n"
0 0 24 3 22 #"                      "
0 0 19 3 27 #"\"as a function expecting: \""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 7 #"\317\204-rand"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 3 #"\317\204i"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 10 #"args-found"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\204i"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"curry-app"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 10 #"args-found"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 4 #"rand"
0 0 24 3 7 #")))])))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 9 #"curry-app"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #" ("
0 0 14 3 1 #"U"
0 0 24 3 1 #" "
0 0 14 3 4 #"Null"
0 0 24 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 3 #")) "
0 0 14 3 4 #"Core"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"curry-app"
0 0 24 3 1 #" "
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 5 #"rands"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 5 #"rator"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"d"
0 0 24 3 3 #") ("
0 0 14 3 9 #"curry-app"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 28 3 1 #","
0 0 14 3 5 #"rator"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 2 #") "
0 0 14 3 1 #"d"
0 0 24 3 6 #")]))  "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 8 #"Renaming"
0 0 24 3 1 #" "
0 0 14 3 3 #"Src"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 3 #"out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 3 #"out"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 15 3 5 #"match"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-stx"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 6 #"binder"
0 0 24 3 1 #" "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 2 #"PI"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"b-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 1 #"b"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 14 #"val-of-closure"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 3 #"NEU"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #" ("
0 0 14 3 5 #"N-var"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 2 #") "
0 0 14 3 5 #"x-loc"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 2 #"x^"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 6 #"non-PI"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 22 #"\"Not a function type:\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 6 #"non-PI"
0 0 24 3 6 #")))])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"xs"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 15 #"              ("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                 "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                    "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 1 #"@"
0 0 24 3 2 #" ("
0 0 14 3 12 #"not-for-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 24 #"                        "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 28 3 1 #"."
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 2 #"xs"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 14 3 2 #"tv"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"      "
0 0 17 3 15 #";; new \316\273i case"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"\316\273i"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"PIi"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"x^"
0 0 24 3 2 #" ("
0 0 14 3 5 #"fresh"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 13 #"            ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"b-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 2 #" ("
0 0 14 3 9 #"bind-free"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 15 #"extend-renaming"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 34 #"                                  "
0 0 14 3 1 #"b"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 14 #"val-of-closure"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 3 #"NEU"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #" ("
0 0 14 3 5 #"N-var"
0 0 24 3 1 #" "
0 0 14 3 2 #"x^"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 15 3 5 #"begin"
0 0 24 3 3 #" (("
0 0 14 3 13 #"pie-info-hook"
0 0 24 3 3 #") ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 12 #"binding-site"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                          ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #" ("
0 0 28 3 1 #","
0 0 14 3 2 #"x^"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 5 #"b-out"
0 0 24 3 6 #")))))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 4 #")])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"d"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 5 #"SIGMA"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"a-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 5 #"d-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 1 #"r"
0 0 24 29 1 #"\n"
0 0 24 3 32 #"                                "
0 0 14 3 1 #"d"
0 0 24 29 1 #"\n"
0 0 24 3 33 #"                                ("
0 0 14 3 14 #"val-of-closure"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"a-out"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"a-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"d-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 9 #"non-Sigma"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 52
#"\"cons requires a Pair or \316\243 type, but was used as a\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 9 #"non-Sigma"
0 0 24 3 6 #")))])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 3 #"nil"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 4 #"LIST"
0 0 24 3 1 #" "
0 0 14 3 1 #"E"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"nil"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 8 #"non-List"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 45 #"\"nil requires a List type, but was used as a\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-List"
0 0 24 3 6 #")))])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"same"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"c"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 5 #"EQUAL"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 5 #"fromv"
0 0 24 3 1 #" "
0 0 14 3 3 #"tov"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"c-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 1 #" "
0 0 14 3 2 #"Av"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"v"
0 0 24 3 2 #" ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"c-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 5 #"fromv"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 2 #") "
0 0 14 3 2 #"Av"
0 0 24 3 1 #" "
0 0 14 3 3 #"tov"
0 0 24 3 1 #" "
0 0 14 3 1 #"v"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"same"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"c-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 5 #"non-="
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 44 #"\"same requires an = type, but was used as a\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"non-="
0 0 24 3 6 #")))])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 6 #"vecnil"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"ZERO"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 6 #"vecnil"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-zero"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 6 #"vecnil"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 39 #"\"requires that the length be zero, not\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-zero"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 7 #"non-Vec"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 6 #"vecnil"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 34 #"\"must be a Vec, but was used in a\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"non-Vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 10 #"\"context.\""
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 5 #"vec::"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"t"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 2 #" ("
0 0 14 3 4 #"ADD1"
0 0 24 3 1 #" "
0 0 14 3 5 #"len-1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"h-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"h"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                  ("
0 0 14 3 5 #"t-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"t"
0 0 24 3 2 #" ("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 14 3 5 #"len-1"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 5 #"vec::"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"h-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"t-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 3 #"VEC"
0 0 24 3 1 #" "
0 0 14 3 2 #"Ev"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-add1"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 54 #"\"vec:: requires that the length have add1 on top, not\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 3 #"NAT"
0 0 24 3 1 #" "
0 0 14 3 8 #"non-add1"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 7 #"non-Vec"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 40 #"\"vec:: must be a Vec, but was used in a\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 7 #"non-Vec"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 10 #"\"context.\""
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"l"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"EITHER"
0 0 24 3 1 #" "
0 0 14 3 2 #"Lv"
0 0 24 3 1 #" "
0 0 14 3 2 #"Rv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"l-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"l"
0 0 24 3 1 #" "
0 0 14 3 2 #"Lv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"l-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 10 #"non-Either"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 52 #"\"left constructs an Either, but it was used where a\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 10 #"non-Either"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 15 #"\"was expected.\""
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 4 #"rght"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"         [("
0 0 14 3 6 #"EITHER"
0 0 24 3 1 #" "
0 0 14 3 2 #"Lv"
0 0 24 3 1 #" "
0 0 14 3 2 #"Rv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 5 #"r-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 4 #"rght"
0 0 24 3 1 #" "
0 0 14 3 2 #"Rv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                 ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 5 #"right"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"r-out"
0 0 24 3 4 #")))]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ["
0 0 14 3 10 #"non-Either"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 4 #"stop"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 53 #"\"right constructs an Either, but it was used where a\""
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 10 #"non-Either"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 18 #"                  "
0 0 19 3 15 #"\"was expected.\""
0 0 24 3 5 #"))])]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 21 3 1 #"'"
0 0 14 3 4 #"TODO"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (("
0 0 14 3 2 #"ty"
0 0 24 3 2 #" ("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 13 #"send-pie-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"TODO"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 13 #"read-back-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #") "
0 0 28 3 1 #","
0 0 14 3 2 #"ty"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 17 #"                ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 3 #"ann"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 4 #"TODO"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 16 #"location->srcloc"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #")) "
0 0 28 3 1 #","
0 0 14 3 2 #"ty"
0 0 24 3 2 #") "
0 0 14 3 4 #"Core"
0 0 24 3 5 #"))))]"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ["
0 0 14 3 4 #"else"
0 0 24 3 2 #" ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 3 #"the"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"t-out"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 5 #"e-out"
0 0 24 3 3 #") ("
0 0 14 3 5 #"synth"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"r"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 21 #"                    ("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                         [("
0 0 14 3 3 #"PIi"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"A"
0 0 24 3 1 #" "
0 0 14 3 1 #"c"
0 0 24 3 3 #") ("
0 0 14 3 11 #"solve-types"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 2 #") "
0 0 14 3 5 #"t-out"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 26 #"                         ["
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 9 #"same-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 3 #") ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"t-out"
0 0 24 3 2 #") "
0 0 14 3 2 #"tv"
0 0 24 3 5 #")])))"
0 0 24 29 1 #"\n"
0 0 24 3 20 #"                   ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 5 #"e-out"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"      ))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 2 #"ok"
0 0 24 3 1 #" "
0 0 14 3 3 #"out"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 15 3 5 #"begin"
0 0 24 3 2 #" ("
0 0 14 3 13 #"send-pie-info"
0 0 24 3 2 #" ("
0 0 14 3 7 #"src-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"e"
0 0 24 3 2 #") "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 14 3 8 #"has-type"
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 14 3 3 #"out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 9 #"same-type"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 4 #"Void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"same-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 7 #"given-e"
0 0 24 3 2 #" ("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 10 #"expected-e"
0 0 24 3 2 #" ("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"\316\261-equiv?"
0 0 24 3 1 #" "
0 0 14 3 7 #"given-e"
0 0 24 3 1 #" "
0 0 14 3 10 #"expected-e"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 10 #"\"Expected\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"expected"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 27 #"                           "
0 0 19 3 11 #"\"but given\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"given"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 11 #"solve-types"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 1 #" "
0 0 14 3 4 #"Core"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 4 #"Void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"solve-types"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2041"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2042"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 8 #"succeed?"
0 0 24 3 2 #" ("
0 0 14 3 5 #"solve"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2041"
0 0 24 3 1 #" "
0 0 14 3 3 #"\317\2042"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 6 #"equal?"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 1 #" "
0 0 14 3 8 #"succeed?"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 14 3 3 #"loc"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 35 #"\"Could not resolve expected type: \""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2041"
0 0 24 3 1 #" "
0 0 19 3 25 #"\"with synthesized type: \""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 3 #"\317\2042"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 4 #"void"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"convert"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 4 #"Void"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"convert"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 1 #" "
0 0 14 3 2 #"av"
0 0 24 3 1 #" "
0 0 14 3 2 #"bv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 3 #"let"
0 0 24 3 3 #" (["
0 0 14 3 1 #"a"
0 0 24 3 2 #" ("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 1 #" "
0 0 14 3 2 #"av"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ["
0 0 14 3 1 #"b"
0 0 24 3 2 #" ("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 1 #" "
0 0 14 3 2 #"bv"
0 0 24 3 3 #")])"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 9 #"\316\261-equiv?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 4 #"void"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"        ("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 29 1 #"\n"
0 0 24 3 14 #"              "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 17 #"\"The expressions\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 1 #" "
0 0 14 3 2 #"av"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 5 #"\"and\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 9 #"read-back"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 1 #" "
0 0 14 3 2 #"bv"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 19 3 18 #"\"are not the same\""
0 0 24 29 1 #"\n"
0 0 24 3 16 #"                "
0 0 28 3 1 #","
0 0 24 3 1 #"("
0 0 14 3 14 #"read-back-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 6 #"))))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";; --------------"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";; Claims + defs"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"not-used"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"not-used"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 5 #"pair?"
0 0 24 3 2 #" ("
0 0 14 3 4 #"assv"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 10 #"\"The name\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"is aready used.\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 7 #"      ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 21 3 2 #"#t"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 9 #"get-claim"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 5 #"Value"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-claim"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"'"
0 0 24 3 4 #"() ("
0 0 14 3 4 #"stop"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 21 3 1 #"`"
0 0 24 3 1 #"("
0 0 19 3 11 #"\"No claim:\""
0 0 24 3 1 #" "
0 0 28 3 1 #","
0 0 14 3 1 #"x"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"claim"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 3 #")) "
0 0 14 3 7 #"\316\223-next"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 23 3 6 #"#:when"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 2 #"go"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 13 #"not-the-claim"
0 0 24 3 1 #" "
0 0 14 3 7 #"\316\223-next"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 9 #"get-claim"
0 0 24 3 1 #" "
0 0 14 3 7 #"\316\223-next"
0 0 24 3 1 #" "
0 0 14 3 5 #"where"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 4 #")]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 9 #"add-claim"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 3 #"Src"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 9 #"add-claim"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 5 #"f-loc"
0 0 24 3 1 #" "
0 0 14 3 2 #"ty"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 1 #"_"
0 0 24 3 2 #" ("
0 0 14 3 8 #"not-used"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"f-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 6 #"ty-out"
0 0 24 3 2 #" ("
0 0 14 3 7 #"is-type"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 2 #"ty"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #" ("
0 0 14 3 5 #"claim"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 6 #"ty-out"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 19 #"                   "
0 0 14 3 2 #"\316\223"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 12 #"remove-claim"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"remove-claim"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 5 #"match"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 21 3 1 #"'"
0 0 24 3 3 #"()]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #" ("
0 0 14 3 5 #"claim"
0 0 24 3 1 #" "
0 0 14 3 2 #"ty"
0 0 24 3 3 #")) "
0 0 14 3 7 #"\316\223-next"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 23 3 6 #"#:when"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 12 #"remove-claim"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 7 #"\316\223-next"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 2 #") "
0 0 14 3 7 #"\316\223-next"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"     "
0 0 23 3 6 #"#:when"
0 0 24 3 2 #" ("
0 0 14 3 3 #"not"
0 0 24 3 2 #" ("
0 0 14 3 4 #"eqv?"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 1 #"y"
0 0 24 3 1 #" "
0 0 14 3 1 #"b"
0 0 24 3 3 #") ("
0 0 14 3 12 #"remove-claim"
0 0 24 3 1 #" "
0 0 14 3 1 #"x"
0 0 24 3 1 #" "
0 0 14 3 7 #"\316\223-next"
0 0 24 3 5 #"))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 7 #"add-def"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 1 #" "
0 0 14 3 3 #"Loc"
0 0 24 3 1 #" "
0 0 14 3 3 #"Src"
0 0 24 3 2 #" ("
0 0 14 3 7 #"Perhaps"
0 0 24 3 1 #" "
0 0 14 3 3 #"Ctx"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 7 #"add-def"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 5 #"f-loc"
0 0 24 3 1 #" "
0 0 14 3 4 #"expr"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 5 #"go-on"
0 0 24 3 3 #" (("
0 0 14 3 2 #"tv"
0 0 24 3 2 #" ("
0 0 14 3 9 #"get-claim"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 5 #"f-loc"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 11 #"          ("
0 0 14 3 8 #"expr-out"
0 0 24 3 2 #" ("
0 0 14 3 5 #"check"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 24 3 3 #"() "
0 0 14 3 4 #"expr"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 2 #"go"
0 0 24 3 2 #" ("
0 0 14 3 8 #"bind-val"
0 0 24 3 2 #" ("
0 0 14 3 12 #"remove-claim"
0 0 24 3 1 #" "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 2 #") "
0 0 14 3 1 #"f"
0 0 24 3 1 #" "
0 0 14 3 2 #"tv"
0 0 24 3 2 #" ("
0 0 14 3 10 #"val-in-ctx"
0 0 24 3 1 #" "
0 0 14 3 2 #"\316\223"
0 0 24 3 1 #" "
0 0 14 3 8 #"expr-out"
0 0 24 3 5 #")))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 8 #"atom-ok?"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 1 #" "
0 0 14 3 6 #"Symbol"
0 0 24 3 1 #" "
0 0 14 3 7 #"Boolean"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"all-ok-atom"
0 0 24 3 2 #" ("
0 0 14 3 12 #"string->list"
0 0 24 3 2 #" ("
0 0 14 3 14 #"symbol->string"
0 0 24 3 1 #" "
0 0 14 3 1 #"a"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 1 #":"
0 0 24 3 1 #" "
0 0 14 3 11 #"all-ok-atom"
0 0 24 3 2 #" ("
0 0 14 3 2 #"->"
0 0 24 3 2 #" ("
0 0 14 3 6 #"Listof"
0 0 24 3 1 #" "
0 0 14 3 4 #"Char"
0 0 24 3 2 #") "
0 0 14 3 7 #"Boolean"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"all-ok-atom"
0 0 24 3 1 #" "
0 0 14 3 2 #"cs"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 5 #"null?"
0 0 24 3 1 #" "
0 0 14 3 2 #"cs"
0 0 24 3 2 #") "
0 0 21 3 2 #"#t"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"    [("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 16 #"char-alphabetic?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"cs"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 4 #"eqv?"
0 0 24 3 2 #" ("
0 0 14 3 3 #"car"
0 0 24 3 1 #" "
0 0 14 3 2 #"cs"
0 0 24 3 2 #") "
0 0 21 3 3 #"#\\-"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 6 #"     ("
0 0 14 3 11 #"all-ok-atom"
0 0 24 3 2 #" ("
0 0 14 3 3 #"cdr"
0 0 24 3 1 #" "
0 0 14 3 2 #"cs"
0 0 24 3 3 #"))]"
0 0 24 29 1 #"\n"
0 0 24 3 5 #"    ["
0 0 14 3 4 #"else"
0 0 24 3 1 #" "
0 0 21 3 2 #"#f"
0 0 24 3 3 #"]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 7 #"module+"
0 0 24 3 1 #" "
0 0 14 3 4 #"test"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 7 #"require"
0 0 24 3 1 #" "
0 0 14 3 14 #"typed/rackunit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"food"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 7 #"food---"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 2 #"\305\223"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 8 #"rugbr\303\270d"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 24
(
 #"\340\244\246\340\245\207\340\244\265\340\244\250"
 #"\340\244\276\340\244\227\340\244\260\340\245\200"
) 0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 9 #"\346\227\245\346\234\254\350\252\236"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 5 #"at\303\230m"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 15 3 2 #"\316\273"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 10 #"check-true"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 12 #"\316\273\316\254\316\274\316\262\316\264\316\261"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"check-false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"at0m"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 11 #"check-false"
0 0 24 3 2 #" ("
0 0 14 3 8 #"atom-ok?"
0 0 24 3 1 #" "
0 0 21 3 1 #"'"
0 0 14 3 4 #"\360\237\233\266"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 19 #";; Local Variables:"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; eval: (put 'pmatch 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 48 #";; eval: (put 'vmatch 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";; eval: (put 'pmatch-who 'racket-indent-function 2)"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; eval: (put 'primitive 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 49 #";; eval: (put 'derived 'racket-indent-function 0)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; eval: (put 'data-constructor 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 58
#";; eval: (put 'type-constructor 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";; eval: (put 'tests-for 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";; eval: (put 'hole 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; eval: (put '\316\240 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; eval: (put '\316\240* 'racket-indent-function 2)"
0 0 24 29 1 #"\n"
0 0 17 3 45 #";; eval: (put 'PI* 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 44 #";; eval: (put '\316\243 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 53 #";; eval: (put (intern \"?\") 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 60
#";; eval: (put 'trace-type-checker 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";; eval: (put 'go-on 'racket-indent-function 1)"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";; eval: (setq whitespace-line-column 70)"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";; End:"
0           0
